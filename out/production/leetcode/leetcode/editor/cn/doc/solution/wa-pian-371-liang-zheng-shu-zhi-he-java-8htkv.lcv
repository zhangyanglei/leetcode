### 解题思路

这一题:

1. 异或替代不进位加法
2. 如果进位不为0, 说明有进位 , 结果 = 异或的结果 + 进位
3. 在异或前收集进位, 异或后判断是否要加进位

为什么do while ... 看眼7+1的过程

* java

```java
【输入】a= 7(111) b= 1(1)
【执行】int carry = (a & b) << 1
【结果】carry = 2(10)
【执行】a = a ^ b;
【结果】a = 6(110)
【执行】b = carry;
【结果】b = 2(10)
【执行】while (b != 0) 从头开始
【输入】a= 6(110) b= 2(10)
【执行】int carry = (a & b) << 1
【结果】carry = 4(100)
【执行】a = a ^ b;
【结果】a = 4(100)
【执行】b = carry;
【结果】b = 4(100)
【执行】while (b != 0) 从头开始
【输入】a= 4(100) b= 4(100)
【执行】int carry = (a & b) << 1
【结果】carry = 8(1000)
【执行】a = a ^ b;
【结果】a = 0(0)
【执行】b = carry;
【结果】b = 8(1000)
【执行】while (b != 0) 从头开始
【输入】a= 0(0) b= 8(1000)
【执行】int carry = (a & b) << 1
【结果】carry = 0(0)
【执行】a = a ^ b;
【结果】a = 8(1000)
【执行】b = carry;
【结果】b = 0(0)
```

像极了小时候的加法吧 , 一位一位进上去的

by 瓦片

### 代码

* java

```java
class Solution {
 	public int getSum(int a, int b) {
		do {
			int carry = (a & b) << 1;
			a = a ^ b;
			b = carry;
		} while (b != 0);
		return a;
	}
}
```

如果想自己debug玩, 这就是爱~

* java

```java
public int getSum(int a, int b) {
     do {
          System.out.println("【输入】a= " + a + "(" + Integer.toBinaryString(a) + ")" + " b= " + b + "("
                        + Integer.toBinaryString(b) + ")");
          int carry = (a & b) << 1;
          System.out.println("【执行】int carry = (a & b) << 1");
          System.out.println("【结果】carry = " + carry + "(" + Integer.toBinaryString(carry) + ")");
          a = a ^ b;
          System.out.println("【执行】a = a ^ b;");
          System.out.println("【结果】a = " + a + "(" + Integer.toBinaryString(a) + ")");
          b = carry;
          System.out.println("【执行】b = carry;");
          System.out.println("【结果】b = " + b + "(" + Integer.toBinaryString(b) + ")");
          if (b != 0) {
               System.out.println("【执行】while (b != 0) 从头开始");
          }
     } while (b != 0);
     return a;
}
```

